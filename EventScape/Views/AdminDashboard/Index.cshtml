@*AdminDashboard model attached*@
@model EventScape.ViewModels.AdminDashboardViewModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

 
<div class="align-content-center  ">
<h1>Dashboard</h1>
<!--Counters-->
<div class="container-fluid py-7">
	<div class="row rounded-3 row-cols-1 row-cols-md-2 justify-content-center row-cols-lg-4 py-4 g-4 counter-1">
		<div class="col">
			<div class="card card-body shadow">
				<div class="d-inline-flex align-items-center" style="min-height:128px">
					<div class="me-2">
						<div class="bg-light p-3 rounded-circle">
							<i class="bi bi-calendar-event-fill"></i>
						</div>
					</div>
					<div><span class="fw-bold display-6 mb-5" data-vanilla-counter="" data-start-at="0" data-end-at= "@Html.DisplayFor(model => model.TotalEventsCount)" data-time="1000"
						data-delay="60" data-format="{}">125</span>
						<p class="lead" editable="inline"><span><b>Upcoming</b></span> Events</p>
					</div>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card card-body shadow">
				<div class="d-inline-flex align-items-center" style="min-height:128px">
					<div class="me-2">
						<div class="bg-light p-3 rounded-circle">
							 <i class="bi bi-people-fill  "></i>
						</div>
					</div>
					<div>
						<span class="fw-bold display-6 mb-5" data-vanilla-counter="" data-start-at="0" data-end-at="@Html.DisplayFor(model => model.RegisteredUsers)" data-time="1000" data-delay="60" data-format="{}">53</span>
						<p class="lead" editable="inline"><b>Users</b> </p>
					</div>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card card-body shadow">
				<div class="d-inline-flex align-items-center" style="min-height:128px">
					<div class="me-2">
						<div class="bg-light p-3 rounded-circle ">
							<i class="bi bi-ticket-perforated-fill"></i>
						</div>
					</div>
					<div>
						<span class="fw-bold display-6 mb-5" data-vanilla-counter="" data-start-at="0" data-end-at="@Html.DisplayFor(model => model.TotalConfirmedBookings)" data-time="1000" data-delay="60" data-format="{}">250</span>
						<p class="lead" editable="inline"><b>Sales</b> </p>
					</div>
				</div>
			</div>
		</div>
		<div class="col">
			<div class="card card-body shadow">
				<div class="d-inline-flex align-items-center" style="min-height:128px">
					<div class="me-2">
						<div class="bg-light p-3 rounded-circle">
							<i class="bi bi-cash-coin"></i>
						</div>
					</div>
					<div>
						<span class="fw-bold display-6 mb-5" data-vanilla-counter="" data-start-at="0" data-end-at="@Html.DisplayFor(model => model.TotalEarnings)" data-time="1000" data-delay="60" data-format="{}">250</span>
						<p class="lead" editable="inline"><b>Earnings</b> </p>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="container-fluid py-7">
	<div class="row rounded-3 row-cols-1 row-cols-md-1   row-cols-lg-2 py-4 g-4 ">
		<!--upcomig events-->
	<div class="col">
			<div class="card card-body rounded-3  shadow-lg">
				<div class=" align-items-left" style="min-height:400px">
					<div class="me-2">
						<h4>Upcoming Events</h4>
					</div>
					<div>
		<table class="table table-striped w-100 ">
		 <thead>
				  <tr >
            <th>
               Event
            </th>        
            <th>
               Location
            </th>
            <th>
                MaxCapacity
            </th>            
            <th>
                Price
            </th>
           
             
        </tr>
		 </thead>
			<tbody>
		@foreach (var item in Model.UpcomingEvents) {
			<tr scope="row"  >
            <td>
                @Html.DisplayFor(modelItem => item.EventName)
            </td>
           
           
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
           
          <td>
                @Html.DisplayFor(modelItem => item.MaxCapacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
           
           
        </tr>
}
		</tbody>
		</table>
					
					</div>
				</div>
			</div>
		</div>
		<!--upcomig events-->
		<!--Bookings available -->
	<div class="col">
			<div class="card card-body rounded-3 shadow-lg ">
				<div class="  align-items-left" style="min-height:400px">
					<div class="me-2">
					<h4>Bookings left</h4>
					</div>
					<ul class="navbar-nav ">
						@foreach(var e in Model.UpcomingEvents)						 
						{						
						<li class="nav-item mb-3">						 
							<div class="row"><label class="col-8">Drama</label> <label class="col-4" id="tickets">@e.InitialCapacity/@e.MaxCapacity</label></div>
							<div class="progress">
							 <div class="progress-bar progress-bar-striped" role="progressbar" style="width:@(e.MaxCapacity)%;" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"></div>
							</div>						 
						</li>
						}
					</ul>
					
				</div>
			</div>
		</div>
		<!--Bookings available -->
	</div>
	
</div>
<div class="container-fluid py-7">
	<div class="row rounded-3 row-cols-1 row-cols-md-1   row-cols-lg-2 py-4 g-4 ">
		<div class="col">
			<div class="card card-body rounded-3 shadow-lg">
				<div class="d-inline-flex align-items-center" style="min-height:400px">
					<div class="me-2">
						<h4>User Queries</h4>
					</div>
					<div>
					
				
					
					</div>
				</div>
			</div>
		</div>
		
	<div class="col">
			<div class="card card-body rounded-3 shadow-lg ">
				<div class="d-inline-flex align-items-center" style="min-height:400px">
					<div class="me-2 row ">
						<h4>Booking Requests</h4>
					</div><br/>
					<div class="container-fluid row">
						<table class="table table-striped w-100 ">
						 <thead>
								  <tr >
							<th>
							   Event
							</th>        
							<th>
							   Location
							</th>
							<th>
								MaxCapacity
							</th>            
							<th>
								Price
							</th>
           
             
						</tr>
						 </thead>
						<tbody>
						@foreach (var item in Model.BookingRequests) {
							<tr scope="row"   >
							<td>
								@Html.DisplayFor(modelItem => item.Name)
							</td>   
							<td>
								@Html.DisplayFor(modelItem => item.BookingDate)
							</td>
           
						  <td>
								@Html.DisplayFor(modelItem => item.BookingStatus)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.OrderTotal)
							</td>
           
           
						</tr>
				}
						</tbody>
						</table>
					
					</div>
				</div>
			</div>
		</div>
	</div>
	
</div>
<script src="https://unpkg.com/vanilla-counter"></script>
<!-- check info at https://github.com/yunisdev/vanilla-counter -->

<script>

const sectionOne = document.querySelector('.counter-1');

const options = {};

const observer = new IntersectionObserver(function
(entries, observer){
    entries.forEach(entry => {
        console.log(entry);
         VanillaCounter();
    });
}, options);

observer.observe(sectionOne);
 

</script>


</div>